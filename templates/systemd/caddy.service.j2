#jinja2: lstrip_blocks: "True"
[Unit]
Description=Caddy ({{ caddy_identifier }})
{% for service in caddy_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in caddy_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop --time={{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ caddy_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ caddy_identifier }} 2>/dev/null || true'

ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
			--rm \
			--name={{ caddy_identifier }} \
			--log-driver=none \
			--user={{ caddy_uid }}:{{ caddy_gid }} \
			--cap-drop=ALL \
			--cap-add=CAP_NET_BIND_SERVICE \
			--read-only \
			--network={{ caddy_container_network }} \
			-p 80:80 \
			-p 443:443 \
			-p 443:443/udp \
			--mount type=bind,src={{ caddy_www_path }},dst=/var/www,readonly \
			--mount type=bind,src={{ caddy_config_path }},dst=/config \
			--mount type=bind,src={{ caddy_data_path }},dst=/data \
			--mount type=bind,src={{ caddy_log_path }},dst=/logs \
			--mount type=bind,src={{ caddy_base_path }}/Caddyfile,dst=/etc/caddy/Caddyfile,readonly \
			{% for arg in caddy_container_extra_arguments %}
			{{ arg }} \
			{% endfor %}
			{{ caddy_container_image }}

{% for network in caddy_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ caddy_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ caddy_identifier }}

ExecReload={{ devture_systemd_docker_base_host_command_docker }} exec -w /etc/caddy {{ caddy_identifier }} caddy reload

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop --time={{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ caddy_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ caddy_identifier }} 2>/dev/null || true'

Restart=always
RestartSec=30
SyslogIdentifier={{ caddy_identifier }}

[Install]
WantedBy=multi-user.target
